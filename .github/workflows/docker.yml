name: Docker Build & Push to GHCR

on:
  workflow_run:
    workflows: ["Node CI"]   # üëà Doit correspondre exactement au nom du workflow Node
    types:
      - completed            # ‚úÖ "completed" (pas "complete")

jobs:
  build-and-push:
    runs-on: self-hosted     # ton Ubuntu (runner GitHub Actions)

    steps:
      # 0Ô∏è‚É£ Nettoyage du workspace pour √©viter les anciennes versions du code
      - name: Clean workspace
        run: |
          echo "Cleaning workspace..."
          sudo rm -rf "$GITHUB_WORKSPACE"/*

      # 1Ô∏è‚É£ Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ V√©rifie que le Dockerfile existe bien
      - name: Check Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "‚ùå Dockerfile introuvable dans $(pwd)"
            ls -la
            exit 1
          fi
          echo "‚úÖ Dockerfile trouv√©."

      # 3Ô∏è‚É£ (Optionnel) Activer le moteur BuildKit moderne
      - name: Enable Docker BuildKit
        run: docker buildx create --use

      # 4Ô∏è‚É£ Build de l'image Docker
      - name: Build Docker image
        run: docker build -t petite-maison-epouvante:latest .

      # 5Ô∏è‚É£ Nettoyer les anciennes images inutilis√©es
      - name: Clean dangling images
        run: docker image prune -f

      # 6Ô∏è‚É£ Login sur GitHub Container Registry
      - name: Login to GHCR
        env:
          CR_PAT: ${{ secrets.CR_PAT }}  # PAT GitHub avec le scope `write:packages`
        run: echo $CR_PAT | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # 7Ô∏è‚É£ Taguer l'image pour GHCR
      - name: Tag Docker image for GHCR
        run: docker tag petite-maison-epouvante:latest ghcr.io/${{ github.repository_owner }}/petite-maison-epouvante:latest

      # 8Ô∏è‚É£ Pousser l'image sur GHCR
      - name: Push image to GHCR
        run: docker push ghcr.io/${{ github.repository_owner }}/petite-maison-epouvante:latest
