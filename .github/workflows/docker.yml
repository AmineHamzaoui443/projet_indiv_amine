name: Docker Build & Push to GHCR

on:
  # Permet de lancer manuellement le workflow
  workflow_dispatch:

  # Déclenche automatiquement après le workflow "Node CI"
  workflow_run:
    workflows: ["Node CI"]   # nom exact du premier workflow
    types:
      - complete

jobs:
  build-and-push:
    runs-on: self-hosted   # ton runner Ubuntu

    steps:
      # 1️⃣ Checkout du code
      - uses: actions/checkout@v3

      # 2️⃣ Build de l'image Docker (sans Buildx)
      - name: Build Docker image
        run: docker build -t petite-maison-epouvante:latest .

      # 3️⃣ Nettoyer les anciennes images inutilisées (optionnel)
      - name: Clean dangling images
        run: docker image prune -f

      # 4️⃣ Login sur GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      # 5️⃣ Taguer l'image pour GHCR
      - name: Tag Docker image for GHCR
        run: |
          OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          docker tag petite-maison-epouvante:latest ghcr.io/$OWNER/petite-maison-epouvante:latest
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
      
      # 6️⃣ Push sur GHCR
      - name: Push to GHCR
        run: |
          OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/$OWNER/petite-maison-epouvante:latest
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          
      # 7️⃣ Déployer le conteneur sur le runner
      - name: Deploy Docker container
        run: |
          OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          docker rm -f petite-maison-epouvante || true
          
          docker run -d -p 80:5000 \
            -e MONGO_URI="${{ secrets.MONGO_URI }}" \
            --name petite-maison-epouvante \
            ghcr.io/$OWNER/petite-maison-epouvante:latest
          